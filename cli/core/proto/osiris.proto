syntax = "proto3";

package osiris;

service OsirisService {
    rpc DeployFunction(DeployRequest) returns (DeployResponse);
    rpc UpdateFunction(UpdateRequest) returns (UpdateResponse);
    rpc RemoveFunction(RemoveRequest) returns (RemoveResponse);
    rpc ListFunctions(ListRequest) returns (ListResponse);
    rpc DescribeFunction(DescribeRequest) returns (DescribeResponse);
    rpc GetLogs(LogsRequest) returns (LogsResponse);
    rpc MonitorFunction(MonitorRequest) returns (MonitorResponse);
    rpc StartPlatform(StartRequest) returns (StartResponse);
    rpc StopPlatform(StopRequest) returns (StopResponse);
}

// Deploy Function
message DeployRequest {
    string path_to_function_code = 1;
    string function_name = 2;
    string runtime_environment = 3;
}

message DeployResponse {
    bool success = 1;
    string message = 2;
}

// Update Function
message UpdateRequest {
    string function_name = 1;
    string path_to_function_code = 2;
}

message UpdateResponse {
    bool success = 1;
    string message = 2;
}

// Remove Function
message RemoveRequest {
    string function_name = 1;
}

message RemoveResponse {
    bool success = 1;
    string message = 2;
}

// List Functions
message ListRequest {}

message ListResponse {
    repeated FunctionInfo functions = 1;
}

message FunctionInfo {
    string function_name = 1;
    string runtime = 2;
    string status = 3;
}

// Describe Function
message DescribeRequest {
    string function_name = 1;
}

message DescribeResponse {
    string function_name = 1;
    string runtime = 2;
    string status = 3;
    string deployed_at = 4;
}

// Get Logs
message LogsRequest {
    string function_name = 1;
    bool tail = 2;
}

message LogsResponse {
    repeated string logs = 1;
}

// Monitor Function
message MonitorRequest {
    string function_name = 1;
}

message MonitorResponse {
    string function_name = 1;
    string execution_time = 2;
    string cpu_usage = 3;
    string memory_usage = 4;
}

// Start Platform
message StartRequest {}

message StartResponse {
    bool success = 1;
    string message = 2;
}

// Stop Platform
message StopRequest {}

message StopResponse {
    bool success = 1;
    string message = 2;
}